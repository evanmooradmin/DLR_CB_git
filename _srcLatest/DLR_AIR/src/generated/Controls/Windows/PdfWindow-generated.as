
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.Windows
 *	Class: 		PdfWindow
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\Windows\PdfWindow.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:06 EEST
 */

package Controls.Windows
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.HTML;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.effects.Fade;
import mx.events.EffectEvent;
import mx.events.FlexEvent;
import mx.styles.*;



//	begin class def

public class PdfWindow
	extends mx.containers.Canvas
	implements mx.binding.IBindingClient
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var btnClose : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var fadeHidePdfWindow : mx.effects.Fade;

	[Bindable]
/**
 * @private
 **/
	public var fadeShowPdfWindow : mx.effects.Fade;

	[Bindable]
/**
 * @private
 **/
	public var myWin : mx.controls.HTML;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.VBox
        ,
        stylesFactory: function():void {
          this.horizontalAlign = "right";
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              id: "btnClose"
              ,
              events: {
                click: "__btnClose_click",
                rollOver: "__btnClose_rollOver",
                rollOut: "__btnClose_rollOut"
              }
              ,
              propertiesFactory: function():Object { return {
                label: "Close",
                styleName: "ButtonOKAlerWindow",
                height: 25
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.HTML
              ,
              id: "myWin"
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function PdfWindow()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.backgroundColor = 15658734;
			this.backgroundAlpha = 0;
		};



		//	properties
		this.alpha = 0;
		_PdfWindow_Fade2_i();
		_PdfWindow_Fade1_i();

		//	events
		this.addEventListener("creationComplete", ___PdfWindow_Canvas1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _PdfWindow_bindingsSetup();
		var watchers:Array = [];

		var target:PdfWindow = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_Controls_Windows_PdfWindowWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 10 - 119

      import Model.EmbededData;
      import mx.controls.Alert;
      import mx.events.ResizeEvent;
      import mx.core.Application;
      import mx.managers.CursorManager;
      import mx.controls.Button;
      import mx.controls.PopUpButton;
      import mx.managers.PopUpManager;
      import mx.core.UIComponent;
      import mx.events.FlexEvent;
      import mx.effects.Fade;

      private var HandIcon:Class = EmbededData.inctance.fingerIcon;
      private var cursorID:int;

      private var _height:int;
      private var _width:int;
      private var _parent:UIComponent;

      private var pdf:HTMLLoader = new HTMLLoader();

      public static function Show(parent:UIComponent):void
      {
          var pdfWindow:PdfWindow = new PdfWindow();
          
          pdfWindow.Parent = parent;
          pdfWindow.Width = parent.width;
          pdfWindow.Height = parent.height;

          PopUpManager.addPopUp(pdfWindow, parent);
          PopUpManager.centerPopUp(pdfWindow);
          pdfWindow.fadeShowPdfWindow.play();
      }

      private function CreationComplete(event:FlexEvent):void
      {
       try
       {  
            if (HTMLLoader.pdfCapability == HTMLPDFCapability.STATUS_OK)
            {
              var request:URLRequest = new URLRequest("data/pdf/AwadHelp.pdf");
    
              width = _width;
              height = _height;
    
              pdf.width = this.width;
              pdf.height = this.height - 25;
              pdf.load(request);
    
              myWin.addChild(pdf);
            }
            else
            {
              switch (HTMLLoader.pdfCapability)
              {
                case HTMLPDFCapability.ERROR_CANNOT_LOAD_READER:
                  throw new Error("Can't load reader");
                case HTMLPDFCapability.ERROR_INSTALLED_READER_NOT_FOUND:
                  throw new Error("Installed reader not found");
                case HTMLPDFCapability.ERROR_INSTALLED_READER_TOO_OLD:
                  throw new Error("Instaled reader too old");
                case HTMLPDFCapability.ERROR_PREFERRED_READER_TOO_OLD:
                  throw new Error("Preferred reader too old");
              }
            }
       }
       catch (e:Error)
       {
          fadeHidePdfWindow.play();
          AlertWindow.Show(this._parent, "OOPS!", e.message);
       }
      }

      public function set Height(value:int):void
      {
        _height = value;

      }

      public function set Width(value:int):void
      {
        _width = value;
      }
      
      public function set Parent(parent:UIComponent):void
      {
        this._parent = parent;
      }

      private function Click_btnCloseHandler(event:MouseEvent):void
      {
        fadeHidePdfWindow.play();
      }
      private function Hide():void
      {
        PopUpManager.removePopUp(this);
      }

      private function rollOver_btnCloseHandler(event:MouseEvent):void
      {
        cursorID = cursorManager.setCursor(HandIcon);
      }

      private function rollOut_btnCloseHandler(event:MouseEvent):void
      {
        CursorManager.removeCursor(cursorID);
      }

    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _PdfWindow_Fade2_i() : mx.effects.Fade
{
	var temp : mx.effects.Fade = new mx.effects.Fade();
	fadeHidePdfWindow = temp;
	temp.alphaFrom = 1.0;
	temp.alphaTo = 0.0;
	temp.duration = 1000;
	temp.addEventListener("effectEnd", __fadeHidePdfWindow_effectEnd);
	mx.binding.BindingManager.executeBindings(this, "fadeHidePdfWindow", fadeHidePdfWindow);
	return temp;
}

/**
 * @private
 **/
public function __fadeHidePdfWindow_effectEnd(event:mx.events.EffectEvent):void
{
	Hide();
}

private function _PdfWindow_Fade1_i() : mx.effects.Fade
{
	var temp : mx.effects.Fade = new mx.effects.Fade();
	fadeShowPdfWindow = temp;
	temp.alphaFrom = 0.0;
	temp.alphaTo = 1.0;
	temp.duration = 1000;
	mx.binding.BindingManager.executeBindings(this, "fadeShowPdfWindow", fadeShowPdfWindow);
	return temp;
}

/**
 * @private
 **/
public function ___PdfWindow_Canvas1_creationComplete(event:mx.events.FlexEvent):void
{
	CreationComplete(event)
}

/**
 * @private
 **/
public function __btnClose_click(event:flash.events.MouseEvent):void
{
	Click_btnCloseHandler(event)
}

/**
 * @private
 **/
public function __btnClose_rollOver(event:flash.events.MouseEvent):void
{
	rollOver_btnCloseHandler(event)
}

/**
 * @private
 **/
public function __btnClose_rollOut(event:flash.events.MouseEvent):void
{
	rollOut_btnCloseHandler(event)
}


	//	binding mgmt
    private function _PdfWindow_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                fadeShowPdfWindow.target = _sourceFunctionReturnValue;
            },
            "fadeShowPdfWindow.target");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                fadeHidePdfWindow.target = _sourceFunctionReturnValue;
            },
            "fadeHidePdfWindow.target");
        result[1] = binding;

        return result;
    }

    private function _PdfWindow_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (this);
		[Binding(id='1')]
		destination = (this);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (PdfWindow)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
