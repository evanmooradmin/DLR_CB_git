
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.Windows
 *	Class: 		LicenceWindow
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\Windows\LicenceWindow.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:04 EEST
 */

package Controls.Windows
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.containers.Canvas;
import mx.controls.Button;
import mx.controls.Label;
import mx.controls.LinkButton;
import mx.controls.Text;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;



//	begin class def

public class LicenceWindow
	extends mx.containers.Canvas
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var btnCancel : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var btnOK : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var linkButton : mx.controls.LinkButton;

	[Bindable]
/**
 * @private
 **/
	public var txtInputKey : mx.controls.TextInput;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
  ,
  propertiesFactory: function():Object { return {
    width: 378,
    height: 206,
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 10,
          text: "Activation Key"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Button
        ,
        id: "btnOK"
        ,
        events: {
          click: "__btnOK_click",
          rollOver: "__btnOK_rollOver",
          rollOut: "__btnOK_rollOut"
        }
        ,
        propertiesFactory: function():Object { return {
          x: 91.5,
          y: 134,
          label: "OK",
          styleName: "ButtonOKAlerWindow"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Button
        ,
        id: "btnCancel"
        ,
        events: {
          click: "__btnCancel_click",
          rollOver: "__btnCancel_rollOver",
          rollOut: "__btnCancel_rollOut"
        }
        ,
        propertiesFactory: function():Object { return {
          x: 219.5,
          y: 134,
          label: "Cancel",
          styleName: "ButtonOKAlerWindow"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.TextInput
        ,
        id: "txtInputKey"
        ,
        stylesFactory: function():void {
          this.textAlign = "left";
        }
        ,
        propertiesFactory: function():Object { return {
          x: 43,
          y: 104,
          width: 321
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 106,
          text: "Key"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Text
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 36,
          width: 354,
          height: 60,
          text: "In order to activate your application, you must enter in an activation key. This must be entered exactly as it appears in the confirmation email you received from Evan-Moor Educational Publishers.",
          selectable: false
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.LinkButton
        ,
        id: "linkButton"
        ,
        events: {
          click: "__linkButton_click"
        }
        ,
        stylesFactory: function():void {
          this.fontWeight = "normal";
          this.textDecoration = "underline";
          this.themeColor = 16777215;
        }
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 170,
          label: "Donâ€™t have an activation key?"
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function LicenceWindow()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.backgroundColor = 16777215;
			this.backgroundImage = _embed_mxml_style_images_LicenceWindow_bkg_jpg_193384381;
			this.borderStyle = "solid";
			this.borderThickness = 2;
		};



		//	properties
		this.width = 378;
		this.height = 206;

		//	events
		this.addEventListener("creationComplete", ___LicenceWindow_Canvas1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);



		super.initialize();
	}

	//	scripts
	//	<Script>, line 6 - 185

      import Model.EmbededData;
      import flash.net.navigateToURL;
      import mx.managers.CursorManager;
      import mx.events.FlexEvent;
      import mx.managers.PopUpManager;
      import mx.core.UIComponent;
      /***************************************************************
      *
      *  Module Name:
      *     Model\Licence.as
      *
      *  Abstract:
      *     This is licence window control
      *
      *  Author:
      *     Evgenij Welikij   04-December-2009
      *
      *  Revision History:
      *
      ***************************************************************/


      /**
      * Static
      */
      public static function Show(parent:UIComponent, url:String, callBackComplete:Function,
        callBackFault:Function):LicenceWindow
      {
        var licenceWindow:LicenceWindow = new LicenceWindow();
        licenceWindow.url = url;
        licenceWindow.callBackActivateComplete = callBackComplete;
        licenceWindow.callBackActivateFault = callBackFault;

        PopUpManager.addPopUp(licenceWindow, parent, true);
        PopUpManager.centerPopUp(licenceWindow);

        return licenceWindow;
      }


      /**
      * Private members/properties
      */
      private var _url:String = "";
      private var loader:URLLoader = new URLLoader();

      private var _callBackActivateComplete:Function;
      private var _callBackActivateFault:Function;

      private var _waitWindow:WaitWindow;

      [Bindable]
      private var HandIcon:Class = EmbededData.inctance.fingerIcon;
      private var cursorID:int;


      /**
      * Private methods
      */
      private function CallBack_AlerWindow():void
      {
        PopUpManager.removePopUp(this);
        _callBackActivateComplete(txtInputKey.text);
      }


      /**
      * Events handler
      */
      private function CreationCompleteHandler(event:FlexEvent):void
      {
        loader.addEventListener(Event.COMPLETE, Complete_loaderHandler);
        loader.addEventListener(IOErrorEvent.IO_ERROR, IOError_loaderHandler);
        loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, SecurityError_loaderHandler);
      }

      private function Click_btnCancelHandler(event:MouseEvent):void
      {
        PopUpManager.removePopUp(this);
        _callBackActivateFault();
      }

      private function Click_btnOKHandler(event:MouseEvent):void
      {
        var request:URLRequest = new URLRequest(_url + txtInputKey.text);

        loader.load(request);
        _waitWindow = WaitWindow.Show(this, "Licence manager");
      }

      private function IOError_loaderHandler(event:IOErrorEvent):void
      {
        WaitWindow.Hide(_waitWindow);
        AlertWindow.Show(this, "OOPS!", "Unable to connect");
      }

      private function SecurityError_loaderHandler(event:SecurityErrorEvent):void
      {
        WaitWindow.Hide(_waitWindow);
        AlertWindow.Show(this, "OOPS!", "Unable to connect");
      }

      private function Complete_loaderHandler(event:Event):void
      {
        WaitWindow.Hide(_waitWindow);
        var xml:XML = XML(loader.data)

        if (xml.hasOwnProperty("error"))
          AlertWindow.Show(this, "OOPS!", "The activation key you entered does not appear to be valid. Please enter a valid activation key to activate this application.");
        else if (xml.hasOwnProperty("pckey"))
          AlertWindow.Show(this, "Congratulations!", "This application has been activated", CallBack_AlerWindow);
      }

      private function RollOver_btnOK(event:MouseEvent):void
      {
        cursorID = CursorManager.setCursor(HandIcon);
      }

      private function RollOut_btnOK(event:MouseEvent):void
      {
        CursorManager.removeCursor(cursorID);
      }

      private function RollOver_btnCancel(event:MouseEvent):void
      {
        cursorID = CursorManager.setCursor(HandIcon);
      }

      private function RollOut_btnCancel(event:MouseEvent):void
      {
        CursorManager.removeCursor(cursorID);
      }

      private function Click_linkButtonHandler(event:MouseEvent):void
      {
        navigateToURL(new URLRequest("http://www.evan-moor.com/Help/Faq.aspx#83"));
      }


      /**
      * Initialization
      */


      /**
      * Constructor
      */


      /**
      * Virtuals methods
      */


      /**
      * Public members/properties
      */
      public function set url(value:String):void
      {
        _url = value;
      }

      public function set callBackActivateComplete(value:Function):void
      {
        _callBackActivateComplete = value;
      }

      public function set callBackActivateFault(value:Function):void
      {
        _callBackActivateFault = value;
      }


      /**
      * Public methods
      */


    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___LicenceWindow_Canvas1_creationComplete(event:mx.events.FlexEvent):void
{
	CreationCompleteHandler(event)
}

/**
 * @private
 **/
public function __btnOK_click(event:flash.events.MouseEvent):void
{
	Click_btnOKHandler(event)
}

/**
 * @private
 **/
public function __btnOK_rollOver(event:flash.events.MouseEvent):void
{
	RollOver_btnOK(event)
}

/**
 * @private
 **/
public function __btnOK_rollOut(event:flash.events.MouseEvent):void
{
	RollOut_btnOK(event)
}

/**
 * @private
 **/
public function __btnCancel_click(event:flash.events.MouseEvent):void
{
	Click_btnCancelHandler(event)
}

/**
 * @private
 **/
public function __btnCancel_rollOver(event:flash.events.MouseEvent):void
{
	RollOver_btnCancel(event)
}

/**
 * @private
 **/
public function __btnCancel_rollOut(event:flash.events.MouseEvent):void
{
	RollOut_btnCancel(event)
}

/**
 * @private
 **/
public function __linkButton_click(event:flash.events.MouseEvent):void
{
	Click_linkButtonHandler(event)
}





	//	embed carrier vars
[Embed(source='style/images/LicenceWindow/bkg.jpg')]
 private var _embed_mxml_style_images_LicenceWindow_bkg_jpg_193384381:Class;

	//	end embed carrier vars


//	end class def
}

//	end package def
}
