
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.SimplePromptControls.Open_endedWritingPrompt
 *	Class: 		Open_endedWritingPromptSimple
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\SimplePromptControls\Open_endedWritingPrompt\Open_endedWritingPromptSimple.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:03 EEST
 */

package Controls.SimplePromptControls.Open_endedWritingPrompt
{

import Controls.Enviroment.TextExended;
import Interfaces.IDirectionPrompt;
import Interfaces.IFontStyle;
import Interfaces.IResult;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.HBox;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.Text;
import mx.controls.TextArea;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponent;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.effects.Blur;
import mx.effects.Parallel;
import mx.effects.Resize;
import mx.effects.Sequence;
import mx.events.FlexEvent;
import mx.states.AddChild;
import mx.states.State;
import mx.states.Transition;
import mx.styles.*;



//	begin class def

public class Open_endedWritingPromptSimple
	extends mx.containers.Canvas
	implements Interfaces.IDirectionPrompt, Interfaces.IFontStyle, Interfaces.IResult, mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_AddChild1 : mx.states.AddChild;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_AddChild2 : mx.states.AddChild;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_AddChild3 : mx.states.AddChild;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_State1 : mx.states.State;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_State2 : mx.states.State;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_State3 : mx.states.State;

/**
 * @private
 **/
	public var _Open_endedWritingPromptSimple_Transition1 : mx.states.Transition;

	[Bindable]
/**
 * @private
 **/
	public var boxContent : mx.containers.HBox;

	[Bindable]
/**
 * @private
 **/
	public var btnShow : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var showPromptEffect : mx.effects.Parallel;

	[Bindable]
/**
 * @private
 **/
	public var showResizeEffect : mx.effects.Resize;

	[Bindable]
/**
 * @private
 **/
	public var txtArea : mx.controls.TextArea;

	[Bindable]
/**
 * @private
 **/
	public var txtFull : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var txtHeader : Controls.Enviroment.TextExended;

	[Bindable]
/**
 * @private
 **/
	public var vBox : mx.containers.VBox;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.VBox
        ,
        id: "vBox"
        ,
        propertiesFactory: function():Object { return {
          horizontalScrollPolicy: "off",
          verticalScrollPolicy: "off",
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: Controls.Enviroment.TextExended
              ,
              id: "txtHeader"
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              id: "boxContent"
              ,
              stylesFactory: function():void {
                this.verticalAlign = "middle";
                this.paddingBottom = 1;
                this.paddingTop = 1;
                this.paddingLeft = 1;
              }
              ,
              propertiesFactory: function():Object { return {
                verticalScrollPolicy: "off",
                horizontalScrollPolicy: "off"
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function Open_endedWritingPromptSimple()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.verticalScrollPolicy = "off";
		this.horizontalScrollPolicy = "off";
		this.transitions = [_Open_endedWritingPromptSimple_Transition1_i()];
		this.states = [_Open_endedWritingPromptSimple_State1_i(), _Open_endedWritingPromptSimple_State2_i(), _Open_endedWritingPromptSimple_State3_i()];

		//	events
		this.addEventListener("updateComplete", ___Open_endedWritingPromptSimple_Canvas1_updateComplete);
		this.addEventListener("creationComplete", ___Open_endedWritingPromptSimple_Canvas1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _Open_endedWritingPromptSimple_bindingsSetup();
		var watchers:Array = [];

		var target:Open_endedWritingPromptSimple = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_Controls_SimplePromptControls_Open_endedWritingPrompt_Open_endedWritingPromptSimpleWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 7 - 266

      import Model.Events.StateEvent;
      import mx.events.ScrollEvent;
      import Model.Preferences;
      import Controls.QuizControl;
      import Model.FactoryRegExp;
      import Model.Answers.VariantORAnswer;
      import Model.Prompts.Open_endedWritingPrompt;
      import Model.Events.AnswerWillVaryViewControlEvent;
      import Controls.SimplePromptControls.AnswerWillVaryViewControl;
      import mx.events.ResizeEvent;
      import mx.effects.Resize;
      import mx.events.FlexEvent;
      import Controls.ActivityControl;
      import Model.Answers.Answer;
      import Model.Prompts.Prompt;
      /***************************************************************
      *
      *  Module Name:
      *     Controls\SimplePromptControls\Open_endedWritingPrompt\Open_endedWritingPromptControlSimple.mxml
      *
      *  Abstract:
      *     This is simple open-ended writing prompt control
      *
      *  Author:
      *     Evgenij Welikij   22-October-2009
      *
      *  Revision History:
      *
      ***************************************************************/


      /**
      * Static
      */


      /**
      * Private members/properties
      */
      private const state_edit:String = "state_edit";
      private const state_text:String = "state_text";
      private const state_answers_will_vary:String = "state_answers_will_vary";

      private var answerWillWaryControl:AnswerWillVaryViewControl;
      private var _answersWariant:Array = new Array();
      private var _fontName:String;
      private var _fontSize:int;
      private var _fontColor:int;
      private var isContinueOneState:Boolean = false;
      private var _prompt:Open_endedWritingPrompt;
      //Можно ли уменьшать ширену котнрола. Используеться при появлении скорла в приложении
      private var _isCanResize:Boolean = true;

      private var stringForAnswerWillVaryViewControl:String;


      /**
      * Private methods
      */
      private function UpdateComplete(event:FlexEvent):void
      {
        // устанавливаем длинну текст бокса
        var point:Point = new Point(txtArea.x, txtArea.y);
        point = localToGlobal(point);

        // учитаваем его положение по "x"
       // txtArea.width = ActivityControl.MAX_WIDTH - point.x - 50;
         txtArea.percentWidth = 100;
      }

      // метод отслеживает когдла возникает скрол у activityControl и уменьшает контрол на размер скрола
      private function resize_activityControlHandler(event:ResizeEvent):void
      {
          if (QuizControl.instance.activityControl.isCreatedVerticalScroll == true )
          {
             var point:Point = localToGlobal(new Point());
             point = QuizControl.instance.globalToLocal(point);
             boxContent.width = ActivityControl.MAX_WIDTH - point.x - 12;
          }
          else if (QuizControl.instance.activityControl.isCreatedVerticalScroll == false)
                   boxContent.width = this.width;
          }

      private function buildStringForAnswerWillVaryViewControl():void
      {
        stringForAnswerWillVaryViewControl = "";

        //Пробегаем по всем возможным ответам и сверяем их с текстом который ввел пользователь
        for each (var item:Object in this._answersWariant)
        {
          if (item is VariantORAnswer)
          {
            //Сравниваем строки в нижнем регистре и с удалеными пробелами
            if(FactoryRegExp.NormalazeString((item as VariantORAnswer).text.toLowerCase()) != FactoryRegExp.NormalazeString(this.txtArea.text.toString().toLowerCase()))
              stringForAnswerWillVaryViewControl += (item as VariantORAnswer).text +', ';
          }
        }

        stringForAnswerWillVaryViewControl = stringForAnswerWillVaryViewControl.replace(new RegExp(',\\s*?$','g'),'');
      }


      /**
      * Events handler
      */
      private function Clik_btnShowHandler(event:MouseEvent):void
      {
       this.btnShow.visible = false;

        answerWillWaryControl = AnswerWillVaryViewControl.Show(boxContent, stringForAnswerWillVaryViewControl, boxContent.localToGlobal(new Point()),this._fontName,this._fontSize,this._fontColor);
        QuizControl.instance.hideCanvas.visible = true;
        answerWillWaryControl.addEventListener(AnswerWillVaryViewControlEvent.ANSWER_WILL_VARY_EVENT, WillVaryEventHandler);
      }

      private function WillVaryEventHandler(event:AnswerWillVaryViewControlEvent):void
      {
         QuizControl.instance.hideCanvas.visible = false;
         this.btnShow.visible = true;
         answerWillWaryControl.removeEventListener(AnswerWillVaryViewControlEvent.ANSWER_WILL_VARY_EVENT, WillVaryEventHandler);
      }


     //Расчитываем длину контрола когда он будет создан чтоб были доступны глобальные координаты
      private function creationCompleteHandler(event:FlexEvent):void
      {
        var point:Point = localToGlobal(new Point());
        point = QuizControl.instance.globalToLocal(point);
        this.boxContent.width = this.width = ActivityControl.MAX_WIDTH  - point.x + 5;

       if (QuizControl.instance != null)
           QuizControl.instance.activityControl.ScrollConteiner.addEventListener(ResizeEvent.RESIZE, resize_activityControlHandler);
      }
      
      
      
      private function enterState_stateAnswersWillVaryHandler(event:FlexEvent):void
      {
        if (stringForAnswerWillVaryViewControl == "")
          currentState = state_text;
      }


      /**
      * Initialization
      */


      /**
      * Constructor
      */


      /**
      * Virtuals methods
      */
      public virtual function FontName(name:String):void
      {
        txtHeader.setStyle("fontFamily", name);
        txtArea.setStyle("fontFamily", name);
        txtFull.setStyle("fontFamily", name);

        this._fontName = name;
      }

      public virtual function FontSize(size:int):void
      {
        if (_prompt && _prompt.relatedPromptID == 0)
          txtHeader.setStyle("fontSize", size + Preferences.parentPromptFontSizeShift);
        else
          txtHeader.setStyle("fontSize", size);

        txtArea.setStyle("fontSize", size);
        txtFull.setStyle("fontSize", size);
        this._fontSize = size;
        txtArea.height = txtHeader.measureText("A").height * 4;
      }

      public virtual function FontColor(color:int):void
      {
        txtHeader.setStyle("color", color);
        txtArea.setStyle("color", color);
        txtFull.setStyle("color", color);

        this._fontColor = color;
      }

      public virtual function Bold():void
      {
      }

      public virtual function IsComplete():Boolean
      {
        if (ActivityControl.isCheckAnswer == false)
          return true;

        if (txtArea.text == "")
          return false;
        return true;
      }

      public virtual function Init(prompt:Prompt):void
      {
        _prompt = prompt as Open_endedWritingPrompt;
        txtHeader.htmlText = FactoryRegExp.trim(prompt.text);
        txtHeader.htmlText = txtHeader.htmlText.replace(new RegExp("(SIZE\\s*?=\\s*?\"[0-9]+\")",'g'),'');
  
        if ((prompt as Open_endedWritingPrompt).variantOrAnswerContainer != null)
            this._answersWariant = (prompt as Open_endedWritingPrompt).variantOrAnswerContainer.ChildAnswers();
       //Устанавливаем более меньший шрифт если контрорлд пренадлежит Активити дирекшион
       if (_prompt.isParentActivityID == true)
            txtHeader.setStyle("fontSize", this._fontSize - 2);

      }

      public virtual function GetText():String
      {
        return txtArea.text;
      }

      public virtual function Continue():void
      {
        buildStringForAnswerWillVaryViewControl();

        if (this._answersWariant.length != 0 && isContinueOneState == false)
        {
          currentState = state_answers_will_vary;
          isContinueOneState = true;
        }
        else
          currentState = state_text;
      }

      public virtual function SetCorrect():void
      {
      }

      public virtual function SetIncorrect():void
      {
      }

      public virtual function DefaultFont():void
      {
        txtHeader.setStyle("fontFamily", "Futura");
        txtArea.setStyle("fontFamily", "EMComic");
        txtFull.setStyle("fontFamily", "EMComic");
      }


      /**
      * Public members/properties
      */


      /**
      * Public methods
      */


    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _Open_endedWritingPromptSimple_Transition1_i() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	_Open_endedWritingPromptSimple_Transition1 = temp;
	temp.toState = "*";
	temp.effect = _Open_endedWritingPromptSimple_Parallel1_i();
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_Transition1", _Open_endedWritingPromptSimple_Transition1);
	return temp;
}

private function _Open_endedWritingPromptSimple_Parallel1_i() : mx.effects.Parallel
{
	var temp : mx.effects.Parallel = new mx.effects.Parallel();
	showPromptEffect = temp;
	temp.children = [_Open_endedWritingPromptSimple_Resize1_i(), _Open_endedWritingPromptSimple_Sequence1_c()];
	mx.binding.BindingManager.executeBindings(this, "showPromptEffect", showPromptEffect);
	return temp;
}

private function _Open_endedWritingPromptSimple_Resize1_i() : mx.effects.Resize
{
	var temp : mx.effects.Resize = new mx.effects.Resize();
	showResizeEffect = temp;
	temp.duration = 300;
	temp.heightFrom = 0;
	return temp;
}

private function _Open_endedWritingPromptSimple_Sequence1_c() : mx.effects.Sequence
{
	var temp : mx.effects.Sequence = new mx.effects.Sequence();
	temp.children = [_Open_endedWritingPromptSimple_Blur1_c(), _Open_endedWritingPromptSimple_Blur2_c()];
	return temp;
}

private function _Open_endedWritingPromptSimple_Blur1_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.duration = 200;
	temp.blurYFrom = 1.0;
	temp.blurYTo = 20.0;
	return temp;
}

private function _Open_endedWritingPromptSimple_Blur2_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.duration = 200;
	temp.blurYFrom = 20.0;
	temp.blurYTo = 1;
	return temp;
}

private function _Open_endedWritingPromptSimple_State1_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_Open_endedWritingPromptSimple_State1 = temp;
	temp.overrides = [_Open_endedWritingPromptSimple_AddChild1_i()];
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_State1", _Open_endedWritingPromptSimple_State1);
	return temp;
}

private function _Open_endedWritingPromptSimple_AddChild1_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_Open_endedWritingPromptSimple_AddChild1 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_Open_endedWritingPromptSimple_TextArea1_i);
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_AddChild1", _Open_endedWritingPromptSimple_AddChild1);
	return temp;
}

private function _Open_endedWritingPromptSimple_TextArea1_i() : mx.controls.TextArea
{
	var temp : mx.controls.TextArea = new mx.controls.TextArea();
	txtArea = temp;
	temp.horizontalScrollPolicy = "off";
	temp.styleName = "listVerticalScrollBar";
	temp.setStyle("fontWeight", "normal");
	temp.id = "txtArea";
	mx.binding.BindingManager.executeBindings(this, "txtArea", txtArea);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _Open_endedWritingPromptSimple_State2_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_Open_endedWritingPromptSimple_State2 = temp;
	temp.overrides = [_Open_endedWritingPromptSimple_AddChild2_i()];
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_State2", _Open_endedWritingPromptSimple_State2);
	return temp;
}

private function _Open_endedWritingPromptSimple_AddChild2_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_Open_endedWritingPromptSimple_AddChild2 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_Open_endedWritingPromptSimple_Text1_i);
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_AddChild2", _Open_endedWritingPromptSimple_AddChild2);
	return temp;
}

private function _Open_endedWritingPromptSimple_Text1_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	txtFull = temp;
	temp.selectable = false;
	temp.percentWidth = 100.0;
	temp.setStyle("fontWeight", "normal");
	temp.id = "txtFull";
	mx.binding.BindingManager.executeBindings(this, "txtFull", txtFull);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _Open_endedWritingPromptSimple_State3_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_Open_endedWritingPromptSimple_State3 = temp;
	temp.overrides = [_Open_endedWritingPromptSimple_AddChild3_i()];
	temp.addEventListener("enterState", ___Open_endedWritingPromptSimple_State3_enterState);
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_State3", _Open_endedWritingPromptSimple_State3);
	return temp;
}

private function _Open_endedWritingPromptSimple_AddChild3_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_Open_endedWritingPromptSimple_AddChild3 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_Open_endedWritingPromptSimple_Button1_i);
	mx.binding.BindingManager.executeBindings(this, "_Open_endedWritingPromptSimple_AddChild3", _Open_endedWritingPromptSimple_AddChild3);
	return temp;
}

private function _Open_endedWritingPromptSimple_Button1_i() : mx.controls.Button
{
	var temp : mx.controls.Button = new mx.controls.Button();
	btnShow = temp;
	temp.styleName = "ButtonHideDefinition";
	temp.setStyle("right", "50");
	temp.setStyle("verticalCenter", "0");
	temp.addEventListener("click", __btnShow_click);
	temp.id = "btnShow";
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function __btnShow_click(event:flash.events.MouseEvent):void
{
	Clik_btnShowHandler(event)
}

/**
 * @private
 **/
public function ___Open_endedWritingPromptSimple_State3_enterState(event:mx.events.FlexEvent):void
{
	enterState_stateAnswersWillVaryHandler(event)
}

/**
 * @private
 **/
public function ___Open_endedWritingPromptSimple_Canvas1_updateComplete(event:mx.events.FlexEvent):void
{
	UpdateComplete(event)
}

/**
 * @private
 **/
public function ___Open_endedWritingPromptSimple_Canvas1_creationComplete(event:mx.events.FlexEvent):void
{
	creationCompleteHandler(event)
}


	//	binding mgmt
    private function _Open_endedWritingPromptSimple_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                this.currentState = _sourceFunctionReturnValue;
            },
            "this.currentState");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _Open_endedWritingPromptSimple_Transition1.fromState = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_Transition1.fromState");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (vBox);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                showPromptEffect.target = _sourceFunctionReturnValue;
            },
            "showPromptEffect.target");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _Open_endedWritingPromptSimple_State1.name = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_State1.name");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (boxContent);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _Open_endedWritingPromptSimple_AddChild1.relativeTo = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_AddChild1.relativeTo");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (boxContent.width - 15);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                txtArea.maxWidth = _sourceFunctionReturnValue;
            },
            "txtArea.maxWidth");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_text);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _Open_endedWritingPromptSimple_State2.name = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_State2.name");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (boxContent);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _Open_endedWritingPromptSimple_AddChild2.relativeTo = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_AddChild2.relativeTo");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (FactoryRegExp.trim(txtArea.htmlText));
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                txtFull.htmlText = _sourceFunctionReturnValue;
            },
            "txtFull.htmlText");
        result[8] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_answers_will_vary);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _Open_endedWritingPromptSimple_State3.name = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_State3.name");
        result[9] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_text);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _Open_endedWritingPromptSimple_State3.basedOn = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_State3.basedOn");
        result[10] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (boxContent);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _Open_endedWritingPromptSimple_AddChild3.relativeTo = _sourceFunctionReturnValue;
            },
            "_Open_endedWritingPromptSimple_AddChild3.relativeTo");
        result[11] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (boxContent.width - 15);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                txtHeader.width = _sourceFunctionReturnValue;
            },
            "txtHeader.width");
        result[12] = binding;

        return result;
    }

    private function _Open_endedWritingPromptSimple_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (state_edit);
		[Binding(id='1')]
		destination = (state_edit);
		[Binding(id='2')]
		destination = (vBox);
		[Binding(id='3')]
		destination = (state_edit);
		[Binding(id='4')]
		destination = (boxContent);
		[Binding(id='5')]
		destination = (boxContent.width - 15);
		[Binding(id='6')]
		destination = (state_text);
		[Binding(id='7')]
		destination = (boxContent);
		[Binding(id='8')]
		destination = (FactoryRegExp.trim(txtArea.htmlText));
		[Binding(id='9')]
		destination = (state_answers_will_vary);
		[Binding(id='10')]
		destination = (state_text);
		[Binding(id='11')]
		destination = (boxContent);
		[Binding(id='12')]
		destination = (boxContent.width - 15);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (Open_endedWritingPromptSimple)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
