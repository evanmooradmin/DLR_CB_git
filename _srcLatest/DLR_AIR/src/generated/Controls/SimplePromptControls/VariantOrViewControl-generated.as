
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.SimplePromptControls
 *	Class: 		VariantOrViewControl
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\SimplePromptControls\VariantOrViewControl.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:04 EEST
 */

package Controls.SimplePromptControls
{

import Controls.FlowBox.FlowBox;
import Interfaces.IDirectionPrompt;
import Interfaces.IFontStyle;
import Interfaces.IResult;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.display.DisplayObject;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.VBox;
import mx.controls.Image;
import mx.controls.Text;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponent;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.effects.Blur;
import mx.effects.Parallel;
import mx.effects.Resize;
import mx.effects.Sequence;
import mx.states.AddChild;
import mx.states.RemoveChild;
import mx.states.State;
import mx.states.Transition;
import mx.styles.*;



//	begin class def

public class VariantOrViewControl
	extends mx.containers.Canvas
	implements Interfaces.IDirectionPrompt, Interfaces.IFontStyle, Interfaces.IResult, mx.binding.IBindingClient
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var HboxCorrectConteiner : Controls.FlowBox.FlowBox;

	[Bindable]
/**
 * @private
 **/
	public var HboxIncorrectConteiner : Controls.FlowBox.FlowBox;

	[Bindable]
/**
 * @private
 **/
	public var VboxIncorrectConteiner : mx.containers.VBox;

/**
 * @private
 **/
	public var _VariantOrViewControl_AddChild1 : mx.states.AddChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_AddChild2 : mx.states.AddChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_AddChild3 : mx.states.AddChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_FlowBox1 : Controls.FlowBox.FlowBox;

/**
 * @private
 **/
	public var _VariantOrViewControl_RemoveChild1 : mx.states.RemoveChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_RemoveChild2 : mx.states.RemoveChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_RemoveChild3 : mx.states.RemoveChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_RemoveChild4 : mx.states.RemoveChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_RemoveChild5 : mx.states.RemoveChild;

/**
 * @private
 **/
	public var _VariantOrViewControl_State1 : mx.states.State;

/**
 * @private
 **/
	public var _VariantOrViewControl_State2 : mx.states.State;

/**
 * @private
 **/
	public var _VariantOrViewControl_State3 : mx.states.State;

/**
 * @private
 **/
	public var _VariantOrViewControl_State4 : mx.states.State;

/**
 * @private
 **/
	public var _VariantOrViewControl_State5 : mx.states.State;

/**
 * @private
 **/
	public var _VariantOrViewControl_Transition1 : mx.states.Transition;

	[Bindable]
/**
 * @private
 **/
	public var descriptionHeader : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var descriptionHeaderCorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var descriptionHeaderIncorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var imgCorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var imgIncorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var lbCorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var lbIncorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var showPromptEffect : mx.effects.Parallel;

	[Bindable]
/**
 * @private
 **/
	public var showResizeEffect : mx.effects.Resize;

	[Bindable]
/**
 * @private
 **/
	public var textArea : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var vbContainer : mx.containers.VBox;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function VariantOrViewControl()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.verticalScrollPolicy = "off";
		this.horizontalScrollPolicy = "off";
		this.transitions = [_VariantOrViewControl_Transition1_i()];
		this.states = [_VariantOrViewControl_State1_i(), _VariantOrViewControl_State2_i(), _VariantOrViewControl_State3_i(), _VariantOrViewControl_State4_i(), _VariantOrViewControl_State5_i()];

		//	events

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _VariantOrViewControl_bindingsSetup();
		var watchers:Array = [];

		var target:VariantOrViewControl = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_Controls_SimplePromptControls_VariantOrViewControlWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 5 - 203

     import Controls.ActivityControl;
     import Model.FactoryRegExp;
     import Controls.SelectableLabel;
     import Model.Prompts.FillInTheBlanks;
     import Model.Prompts.Prompt;
     import Model.Answers.Answer;
     import Model.EmbededData;
     import Model.Answers.VariantORAnswerConteiner;
      /***************************************************************
      *
      *  Module Name:
      *
      *
      *  Abstract:
      *
      *
      *  Author:
      *     Ruban Sergey
      *
      *  Revision History:
      *
      ***************************************************************/


      /**
      * Static
      */


      /**
      * Private members/properties
      */
      protected var _answer:VariantORAnswerConteiner;
      private var _isContinue:Boolean = false;
      private var _variantOrAnswerContainer:VariantORAnswerConteiner;
      private var _isCheckAnswer:Boolean = false;

      private const state_edit:String = "state_edit";
      private const state_correct:String = "state_correct";
      private const state_incorrect:String = "state_incorrect";
      private const state_ShowAnswer:String = "state_ShowAnswer";
      private const state_answer_variant_only:String = "state_answer_variant_only";

      /**
      * Private methods
      */


      /**
      * Events handler
      */


      /**
      * Initialization
      */


      /**
      * Constructor
      */


      /**
      * Virtuals methods
      */
      public virtual function FontName(name:String):void
      {
        textArea.setStyle("fontFamily", name);
        lbCorrect.setStyle("fontFamily", name);
        lbIncorrect.setStyle("fontFamily", name);
        descriptionHeader.setStyle("fontFamily", name);
        descriptionHeaderIncorrect.setStyle("fontFamily", name);
        descriptionHeaderCorrect.setStyle("fontFamily", name);
      }

      public virtual function FontSize(size:int):void
      {
        textArea.setStyle("fontSize", size);
        lbCorrect.setStyle("fontSize", size);
        lbIncorrect.setStyle("fontSize", size);
        descriptionHeader.setStyle("fontSize", size);
        descriptionHeaderIncorrect.setStyle("fontSize", size);
        descriptionHeaderCorrect.setStyle("fontSize", size);
      
        imgCorrect.width = size;
        imgCorrect.height = size;
        imgIncorrect.width = size;
        imgIncorrect.height = size;
      }

      public virtual function FontColor(color:int):void
      {
        textArea.setStyle("color", color);
        lbCorrect.setStyle("color", color);
        lbIncorrect.setStyle("color", color);
        descriptionHeader.setStyle("color", color);
        descriptionHeaderIncorrect.setStyle("color", color);
        descriptionHeaderCorrect.setStyle("color", color);
      }

      public virtual function Bold():void
      {
      }

      public virtual function Continue():void
      {
        _isContinue = true;
        /*if (currentState == state_correct && HboxIncorrectConteiner.parent == VboxIncorrectConteiner)
            VboxIncorrectConteiner.removeChild(HboxIncorrectConteiner);*/
        currentState = state_ShowAnswer;
      }

      public virtual function IsComplete():Boolean
      {
        if (textArea.text != "")
          return true;
        return false;
      }

      public virtual function Init(prompt:Prompt):void
      {

        this._variantOrAnswerContainer = (prompt as FillInTheBlanks).variantOrAnswerContainer;
        descriptionHeader.htmlText = (prompt as FillInTheBlanks).text.toString();
      }

      public virtual function GetText():String
      {
        return textArea.text;
      }

      public virtual function SetCorrect():void
      {
        if (!_isContinue)
        {
          //Проверяем если была пройдена проверка на коректность введеного текста введеного пользователем 
          //Используеться когода отключена опция Check Answer
         if (currentState == state_incorrect || this._isCheckAnswer == true)
          {
            if ( this._isCheckAnswer == true)
                currentState = state_answer_variant_only;
            else    
                currentState = state_correct;
    
          //  if (this._isCheckAnswer == true)
          //      currentState = state_incorrect;

             var i:int = 0;

              for each (var item:Answer in _variantOrAnswerContainer.ChildAnswers())
              {
                 lbCorrect.htmlText += '<font color="#' + SelectableLabel.IntToHex(EmbededData.inctance.iconCorrectColor.toString()) + '"> '+
                                      item.text + "</font>";
                 lbCorrect.htmlText += ' <font color="#B5B5B5">or</font>';
              }
              lbCorrect.htmlText = lbCorrect.htmlText.replace(new RegExp('<font color="#B5B5B5">or</font>\\s*?$','g'),'');
          }
          else
          {
            currentState = state_ShowAnswer;
            lbCorrect.htmlText = '<font color="#'+ SelectableLabel.IntToHex(EmbededData.inctance.iconCorrectColor.toString()) + '">'+ textArea.text + "</font>";
          }
        }
      }

      public virtual function SetIncorrect():void
      {
        if (!_isContinue)
          currentState = state_incorrect;
          lbIncorrect.htmlText = '<font color="#'+ SelectableLabel.IntToHex(EmbededData.inctance.iconIncorrectColor.toString()) + '">'+ textArea.text + "</font>";
      }

      public virtual function DefaultFont():void
      {
        descriptionHeader.setStyle("fontFamily", "Futura");
        descriptionHeaderIncorrect.setStyle("fontFamily", "Futura");
        descriptionHeaderCorrect.setStyle("fontFamily", "Futura");
        textArea.setStyle("fontFamily", "EMComic");
        lbIncorrect.setStyle("fontFamily", "EMComic");
        lbCorrect.setStyle("fontFamily", "EMComic");
      }


      /**
      * Public members/properties
      */
      public function set isCheckAnswer(value:Boolean):void
      {
        this._isCheckAnswer = value;
      }

      /**
      * Public methods
      */


    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _VariantOrViewControl_Transition1_i() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	_VariantOrViewControl_Transition1 = temp;
	temp.effect = _VariantOrViewControl_Parallel1_i();
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_Transition1", _VariantOrViewControl_Transition1);
	return temp;
}

private function _VariantOrViewControl_Parallel1_i() : mx.effects.Parallel
{
	var temp : mx.effects.Parallel = new mx.effects.Parallel();
	showPromptEffect = temp;
	temp.children = [_VariantOrViewControl_Resize1_i(), _VariantOrViewControl_Sequence1_c()];
	mx.binding.BindingManager.executeBindings(this, "showPromptEffect", showPromptEffect);
	return temp;
}

private function _VariantOrViewControl_Resize1_i() : mx.effects.Resize
{
	var temp : mx.effects.Resize = new mx.effects.Resize();
	showResizeEffect = temp;
	temp.duration = 300;
	temp.heightFrom = 0;
	mx.binding.BindingManager.executeBindings(this, "showResizeEffect", showResizeEffect);
	return temp;
}

private function _VariantOrViewControl_Sequence1_c() : mx.effects.Sequence
{
	var temp : mx.effects.Sequence = new mx.effects.Sequence();
	temp.children = [_VariantOrViewControl_Blur1_c(), _VariantOrViewControl_Blur2_c()];
	return temp;
}

private function _VariantOrViewControl_Blur1_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.duration = 200;
	temp.blurYFrom = 1.0;
	temp.blurYTo = 20.0;
	return temp;
}

private function _VariantOrViewControl_Blur2_c() : mx.effects.Blur
{
	var temp : mx.effects.Blur = new mx.effects.Blur();
	temp.duration = 200;
	temp.blurYFrom = 20.0;
	temp.blurYTo = 1;
	return temp;
}

private function _VariantOrViewControl_State1_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_VariantOrViewControl_State1 = temp;
	temp.overrides = [_VariantOrViewControl_AddChild1_i()];
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_State1", _VariantOrViewControl_State1);
	return temp;
}

private function _VariantOrViewControl_AddChild1_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_VariantOrViewControl_AddChild1 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_VariantOrViewControl_FlowBox1_i);
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_AddChild1", _VariantOrViewControl_AddChild1);
	return temp;
}

private function _VariantOrViewControl_FlowBox1_i() : Controls.FlowBox.FlowBox
{
	var temp : Controls.FlowBox.FlowBox = new Controls.FlowBox.FlowBox();
	_VariantOrViewControl_FlowBox1 = temp;
	temp.verticalScrollPolicy = "off";
	temp.horizontalScrollPolicy = "off";
	temp.id = "_VariantOrViewControl_FlowBox1";
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_FlowBox1", _VariantOrViewControl_FlowBox1);
	if (!temp.document) temp.document = this;
	temp.addChild(_VariantOrViewControl_Text1_i());
	temp.addChild(_VariantOrViewControl_VBox1_i());
	return temp;
}

private function _VariantOrViewControl_Text1_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	descriptionHeader = temp;
	temp.selectable = false;
	temp.id = "descriptionHeader";
	mx.binding.BindingManager.executeBindings(this, "descriptionHeader", descriptionHeader);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_VBox1_i() : mx.containers.VBox
{
	var temp : mx.containers.VBox = new mx.containers.VBox();
	vbContainer = temp;
	temp.id = "vbContainer";
	if (!temp.document) temp.document = this;
	temp.addChild(_VariantOrViewControl_TextInput1_i());
	return temp;
}

private function _VariantOrViewControl_TextInput1_i() : mx.controls.TextInput
{
	var temp : mx.controls.TextInput = new mx.controls.TextInput();
	textArea = temp;
	temp.maxChars = 255;
	temp.setStyle("fontWeight", "bold");
	temp.id = "textArea";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_State2_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_VariantOrViewControl_State2 = temp;
	temp.overrides = [_VariantOrViewControl_AddChild2_i(), _VariantOrViewControl_RemoveChild1_i(), _VariantOrViewControl_RemoveChild2_i()];
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_State2", _VariantOrViewControl_State2);
	return temp;
}

private function _VariantOrViewControl_AddChild2_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_VariantOrViewControl_AddChild2 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_VariantOrViewControl_VBox2_i);
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_AddChild2", _VariantOrViewControl_AddChild2);
	return temp;
}

private function _VariantOrViewControl_VBox2_i() : mx.containers.VBox
{
	var temp : mx.containers.VBox = new mx.containers.VBox();
	VboxIncorrectConteiner = temp;
	temp.id = "VboxIncorrectConteiner";
	if (!temp.document) temp.document = this;
	temp.addChild(_VariantOrViewControl_FlowBox2_i());
	return temp;
}

private function _VariantOrViewControl_FlowBox2_i() : Controls.FlowBox.FlowBox
{
	var temp : Controls.FlowBox.FlowBox = new Controls.FlowBox.FlowBox();
	HboxIncorrectConteiner = temp;
	temp.setStyle("verticalAlign", "middle");
	temp.id = "HboxIncorrectConteiner";
	mx.binding.BindingManager.executeBindings(this, "HboxIncorrectConteiner", HboxIncorrectConteiner);
	if (!temp.document) temp.document = this;
	temp.addChild(_VariantOrViewControl_Image1_i());
	temp.addChild(_VariantOrViewControl_Text2_i());
	temp.addChild(_VariantOrViewControl_Text3_i());
	return temp;
}

private function _VariantOrViewControl_Image1_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgIncorrect = temp;
	temp.id = "imgIncorrect";
	mx.binding.BindingManager.executeBindings(this, "imgIncorrect", imgIncorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_Text2_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	descriptionHeaderIncorrect = temp;
	temp.selectable = false;
	temp.id = "descriptionHeaderIncorrect";
	mx.binding.BindingManager.executeBindings(this, "descriptionHeaderIncorrect", descriptionHeaderIncorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_Text3_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	lbIncorrect = temp;
	temp.selectable = false;
	temp.setStyle("color", 15027785);
	temp.id = "lbIncorrect";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_RemoveChild1_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_VariantOrViewControl_RemoveChild1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_RemoveChild1", _VariantOrViewControl_RemoveChild1);
	return temp;
}

private function _VariantOrViewControl_RemoveChild2_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_VariantOrViewControl_RemoveChild2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_RemoveChild2", _VariantOrViewControl_RemoveChild2);
	return temp;
}

private function _VariantOrViewControl_State3_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_VariantOrViewControl_State3 = temp;
	temp.overrides = [_VariantOrViewControl_AddChild3_i(), _VariantOrViewControl_RemoveChild3_i()];
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_State3", _VariantOrViewControl_State3);
	return temp;
}

private function _VariantOrViewControl_AddChild3_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_VariantOrViewControl_AddChild3 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_VariantOrViewControl_FlowBox3_i);
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_AddChild3", _VariantOrViewControl_AddChild3);
	return temp;
}

private function _VariantOrViewControl_FlowBox3_i() : Controls.FlowBox.FlowBox
{
	var temp : Controls.FlowBox.FlowBox = new Controls.FlowBox.FlowBox();
	HboxCorrectConteiner = temp;
	temp.setStyle("verticalAlign", "middle");
	temp.id = "HboxCorrectConteiner";
	mx.binding.BindingManager.executeBindings(this, "HboxCorrectConteiner", HboxCorrectConteiner);
	if (!temp.document) temp.document = this;
	temp.addChild(_VariantOrViewControl_Image2_i());
	temp.addChild(_VariantOrViewControl_Text4_i());
	temp.addChild(_VariantOrViewControl_Text5_i());
	return temp;
}

private function _VariantOrViewControl_Image2_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgCorrect = temp;
	temp.id = "imgCorrect";
	mx.binding.BindingManager.executeBindings(this, "imgCorrect", imgCorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_Text4_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	descriptionHeaderCorrect = temp;
	temp.selectable = false;
	temp.id = "descriptionHeaderCorrect";
	mx.binding.BindingManager.executeBindings(this, "descriptionHeaderCorrect", descriptionHeaderCorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_Text5_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	lbCorrect = temp;
	temp.selectable = false;
	temp.setStyle("color", 15027785);
	temp.id = "lbCorrect";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _VariantOrViewControl_RemoveChild3_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_VariantOrViewControl_RemoveChild3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_RemoveChild3", _VariantOrViewControl_RemoveChild3);
	return temp;
}

private function _VariantOrViewControl_State4_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_VariantOrViewControl_State4 = temp;
	temp.basedOn = "state_correct";
	temp.overrides = [_VariantOrViewControl_RemoveChild4_i()];
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_State4", _VariantOrViewControl_State4);
	return temp;
}

private function _VariantOrViewControl_RemoveChild4_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_VariantOrViewControl_RemoveChild4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_RemoveChild4", _VariantOrViewControl_RemoveChild4);
	return temp;
}

private function _VariantOrViewControl_State5_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_VariantOrViewControl_State5 = temp;
	temp.basedOn = "state_correct";
	temp.overrides = [_VariantOrViewControl_RemoveChild5_i()];
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_State5", _VariantOrViewControl_State5);
	return temp;
}

private function _VariantOrViewControl_RemoveChild5_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_VariantOrViewControl_RemoveChild5 = temp;
	mx.binding.BindingManager.executeBindings(this, "_VariantOrViewControl_RemoveChild5", _VariantOrViewControl_RemoveChild5);
	return temp;
}


	//	binding mgmt
    private function _VariantOrViewControl_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                this.currentState = _sourceFunctionReturnValue;
            },
            "this.currentState");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (ActivityControl.MAX_WIDTH - 50);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                this.width = _sourceFunctionReturnValue;
            },
            "this.width");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_incorrect);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_Transition1.fromState = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_Transition1.fromState");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_correct);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_Transition1.toState = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_Transition1.toState");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (HboxCorrectConteiner);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                showPromptEffect.target = _sourceFunctionReturnValue;
            },
            "showPromptEffect.target");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (VboxIncorrectConteiner);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                showResizeEffect.target = _sourceFunctionReturnValue;
            },
            "showResizeEffect.target");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State1.name = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State1.name");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _VariantOrViewControl_AddChild1.relativeTo = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_AddChild1.relativeTo");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                _VariantOrViewControl_FlowBox1.width = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_FlowBox1.width");
        result[8] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                descriptionHeader.maxWidth = _sourceFunctionReturnValue;
            },
            "descriptionHeader.maxWidth");
        result[9] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_incorrect);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State2.name = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State2.name");
        result[10] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State2.basedOn = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State2.basedOn");
        result[11] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (vbContainer);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _VariantOrViewControl_AddChild2.relativeTo = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_AddChild2.relativeTo");
        result[12] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                HboxIncorrectConteiner.width = _sourceFunctionReturnValue;
            },
            "HboxIncorrectConteiner.width");
        result[13] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconIncorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgIncorrect.source = _sourceFunctionReturnValue;
            },
            "imgIncorrect.source");
        result[14] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (descriptionHeader.htmlText);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                descriptionHeaderIncorrect.htmlText = _sourceFunctionReturnValue;
            },
            "descriptionHeaderIncorrect.htmlText");
        result[15] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                descriptionHeaderIncorrect.maxWidth = _sourceFunctionReturnValue;
            },
            "descriptionHeaderIncorrect.maxWidth");
        result[16] = binding;
        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (descriptionHeader);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _VariantOrViewControl_RemoveChild1.target = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_RemoveChild1.target");
        result[17] = binding;
        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (textArea);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _VariantOrViewControl_RemoveChild2.target = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_RemoveChild2.target");
        result[18] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_correct);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State3.name = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State3.name");
        result[19] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_incorrect);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State3.basedOn = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State3.basedOn");
        result[20] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (vbContainer);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _VariantOrViewControl_AddChild3.relativeTo = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_AddChild3.relativeTo");
        result[21] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                HboxCorrectConteiner.width = _sourceFunctionReturnValue;
            },
            "HboxCorrectConteiner.width");
        result[22] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconCorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgCorrect.source = _sourceFunctionReturnValue;
            },
            "imgCorrect.source");
        result[23] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (descriptionHeader.htmlText);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                descriptionHeaderCorrect.htmlText = _sourceFunctionReturnValue;
            },
            "descriptionHeaderCorrect.htmlText");
        result[24] = binding;
        binding = new mx.binding.Binding(this,
            function():Number
            {
                return (this.width);
            },
            function(_sourceFunctionReturnValue:Number):void
            {
				
                descriptionHeaderCorrect.maxWidth = _sourceFunctionReturnValue;
            },
            "descriptionHeaderCorrect.maxWidth");
        result[25] = binding;
        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (textArea);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _VariantOrViewControl_RemoveChild3.target = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_RemoveChild3.target");
        result[26] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_ShowAnswer);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State4.name = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State4.name");
        result[27] = binding;
        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (VboxIncorrectConteiner);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _VariantOrViewControl_RemoveChild4.target = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_RemoveChild4.target");
        result[28] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_answer_variant_only);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _VariantOrViewControl_State5.name = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_State5.name");
        result[29] = binding;
        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (VboxIncorrectConteiner);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _VariantOrViewControl_RemoveChild5.target = _sourceFunctionReturnValue;
            },
            "_VariantOrViewControl_RemoveChild5.target");
        result[30] = binding;

        return result;
    }

    private function _VariantOrViewControl_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (state_edit);
		[Binding(id='1')]
		destination = (ActivityControl.MAX_WIDTH - 50);
		[Binding(id='2')]
		destination = (state_incorrect);
		[Binding(id='3')]
		destination = (state_correct);
		[Binding(id='4')]
		destination = (HboxCorrectConteiner);
		[Binding(id='5')]
		destination = (VboxIncorrectConteiner);
		[Binding(id='6')]
		destination = (state_edit);
		[Binding(id='7')]
		destination = (this);
		[Binding(id='8')]
		destination = (this.width);
		[Binding(id='9')]
		destination = (this.width);
		[Binding(id='10')]
		destination = (state_incorrect);
		[Binding(id='11')]
		destination = (state_edit);
		[Binding(id='12')]
		destination = (vbContainer);
		[Binding(id='13')]
		destination = (this.width);
		[Binding(id='14')]
		destination = (EmbededData.inctance.iconIncorrect);
		[Binding(id='15')]
		destination = (descriptionHeader.htmlText);
		[Binding(id='16')]
		destination = (this.width);
		[Binding(id='17')]
		destination = (descriptionHeader);
		[Binding(id='18')]
		destination = (textArea);
		[Binding(id='19')]
		destination = (state_correct);
		[Binding(id='20')]
		destination = (state_incorrect);
		[Binding(id='21')]
		destination = (vbContainer);
		[Binding(id='22')]
		destination = (this.width);
		[Binding(id='23')]
		destination = (EmbededData.inctance.iconCorrect);
		[Binding(id='24')]
		destination = (descriptionHeader.htmlText);
		[Binding(id='25')]
		destination = (this.width);
		[Binding(id='26')]
		destination = (textArea);
		[Binding(id='27')]
		destination = (state_ShowAnswer);
		[Binding(id='28')]
		destination = (VboxIncorrectConteiner);
		[Binding(id='29')]
		destination = (state_answer_variant_only);
		[Binding(id='30')]
		destination = (VboxIncorrectConteiner);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (VariantOrViewControl)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
