
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.SimplePromptControls.FillInTheBlanks
 *	Class: 		FillInTheBlanksAnswerViewControl
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\SimplePromptControls\FillInTheBlanks\FillInTheBlanksAnswerViewControl.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:02 EEST
 */

package Controls.SimplePromptControls.FillInTheBlanks
{

import Interfaces.IDirectionAnswer;
import Interfaces.IFontStyle;
import Interfaces.IResult;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.HBox;
import mx.controls.Image;
import mx.controls.Label;
import mx.controls.Text;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponent;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.states.AddChild;
import mx.states.State;
import mx.styles.*;



//	begin class def

public class FillInTheBlanksAnswerViewControl
	extends mx.containers.Canvas
	implements Interfaces.IDirectionAnswer, Interfaces.IFontStyle, Interfaces.IResult, mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_AddChild1 : mx.states.AddChild;

/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_AddChild2 : mx.states.AddChild;

/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_AddChild3 : mx.states.AddChild;

/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_State1 : mx.states.State;

/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_State2 : mx.states.State;

/**
 * @private
 **/
	public var _FillInTheBlanksAnswerViewControl_State3 : mx.states.State;

	[Bindable]
/**
 * @private
 **/
	public var hBox : mx.containers.HBox;

	[Bindable]
/**
 * @private
 **/
	public var imgCorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var imgIncorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var lbCorrect : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var lbIncorrect : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var textInput : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var txtAfter : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var txtTo : mx.controls.Text;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function FillInTheBlanksAnswerViewControl()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.states = [_FillInTheBlanksAnswerViewControl_State1_i(), _FillInTheBlanksAnswerViewControl_State2_i(), _FillInTheBlanksAnswerViewControl_State3_i()];

		//	events

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _FillInTheBlanksAnswerViewControl_bindingsSetup();
		var watchers:Array = [];

		var target:FillInTheBlanksAnswerViewControl = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_Controls_SimplePromptControls_FillInTheBlanks_FillInTheBlanksAnswerViewControlWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 6 - 188

      import mx.events.ResizeEvent;
      import Model.EmbededData;
      import Model.Answers.Answer;
      import Model.Answers.FillInTheBlanksAnswer;
      import Model.StateTypes;
      import Model.Events.StateEvent;
      import Model.Prompts.FillInTheBlanks;
      import Model.Prompts.Prompt;
      /***************************************************************
      *
      *  Module Name:
      *     Controls\SimplePromptControls\FillInTheBlanks\FillInTheBlanksPromptViewControl.mxml
      *
      *  Abstract:
      *     This is view control for fill in the blanks answer
      *     
      *  Author:
      *     Evgenij Welikij   05-November-2009
      *
      *  Revision History:
      *
      ***************************************************************/
          
          
      /**
      * Static
      */
      
      
      /**
      * Private members/properties
      */      
      protected var _answer:FillInTheBlanksAnswer;
      private var _isContinue:Boolean = false;
      
      private const state_edit:String = "state_edit";
      private const state_correct:String = "state_correct";
      private const state_incorrect:String = "state_incorrect";
      
      
      /**
      * Private methods
      */
      private function TextAreasetMaxWidth():void
      {          
        var lineMetrics:TextLineMetrics = textInput.measureText(_answer.answer);
        
        textInput.width = lineMetrics.width + lineMetrics.x * 4;
        if (textInput.width < 50)
              textInput.width = 100;  
      }
      
      
      /**
      * Events handler
      */
      
      
      /** 
      * Initialization
      */
          
          
      /**
      * Constructor 
      */
      
      
      /**
      * Virtuals methods
      */
      public virtual function FontName(name:String):void
      {
        textInput.setStyle("fontFamily", name);
        lbIncorrect.setStyle("fontFamily", name);
        lbCorrect.setStyle("fontFamily", name);
        txtTo.setStyle("fontFamily", name);
        txtAfter.setStyle("fontFamily", name);
        
        TextAreasetMaxWidth();
      }
      
      public virtual function FontSize(size:int):void
      {
        textInput.setStyle("fontSize", size);
        lbCorrect.setStyle("fontSize", size);
        lbIncorrect.setStyle("fontSize", size);
        txtTo.setStyle("fontSize", size);
        txtAfter.setStyle("fontSize", size);
        
        imgCorrect.width = size;
        imgCorrect.height = size;
        imgIncorrect.width = size;
        imgIncorrect.height = size;
        
        TextAreasetMaxWidth();
      }
      
      public virtual function FontColor(color:int):void
      {
        textInput.setStyle("color", color);
        lbCorrect.setStyle("color", color);
        lbIncorrect.setStyle("color", color);
        txtTo.setStyle("color", color);
        txtAfter.setStyle("color", color);
      }
      
      public virtual function Bold():void
      {
      }
      
      public virtual function Continue():void
      {
        _isContinue = true;
      }
      
      public virtual function IsComplete():Boolean
      {
        if (textInput.text != "")
          return true;
        return false;
      }
      
      public virtual function Init(answer:Answer):void 
      {
        this._answer = answer as FillInTheBlanksAnswer;
        
        if (answer.existInsertPlace)
        {
          txtTo.htmlText = answer.textTo;
          txtAfter.htmlText = answer.textAfter;
        }
        
        textInput.maxChars = _answer.answer.length;
      }
      
      public virtual function GetText():String
      {
        return textInput.text;
      }
      
      public virtual function SetCorrect():void
      {
        if (!_isContinue)
        {
          currentState = state_correct
          lbCorrect.htmlText = txtTo.text + ' ' + _answer.answer + ' ' + txtAfter.text;
        }
      }
      
      public virtual function SetIncorrect():void
      {
        if (!_isContinue)
        {
          currentState = state_incorrect;
          lbIncorrect.htmlText = txtTo.text + ' ' + textInput.text + ' ' + txtAfter.text;
        }
      }
      
      public virtual function DefaultFont():void
      {
        textInput.setStyle("fontFamily", "EMComic");
        lbCorrect.setStyle("fontFamily", "EMComic");
        lbIncorrect.setStyle("fontFamily", "EMComic");
        
        txtTo.setStyle("fontFamily", "EMComic");
        txtAfter.setStyle("fontFamily", "EMComic");
      }
            
      
      /**
      * Public members/properties
      */
      
      
      /**
      * Public methods
      */
      
      
        
    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _FillInTheBlanksAnswerViewControl_State1_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_FillInTheBlanksAnswerViewControl_State1 = temp;
	temp.overrides = [_FillInTheBlanksAnswerViewControl_AddChild1_i()];
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_State1", _FillInTheBlanksAnswerViewControl_State1);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_AddChild1_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_FillInTheBlanksAnswerViewControl_AddChild1 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_FillInTheBlanksAnswerViewControl_HBox1_i);
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_AddChild1", _FillInTheBlanksAnswerViewControl_AddChild1);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_HBox1_i() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	hBox = temp;
	temp.verticalScrollPolicy = "off";
	temp.horizontalScrollPolicy = "off";
	temp.percentWidth = 100.0;
	temp.id = "hBox";
	if (!temp.document) temp.document = this;
	temp.addChild(_FillInTheBlanksAnswerViewControl_Text1_i());
	temp.addChild(_FillInTheBlanksAnswerViewControl_TextInput1_i());
	temp.addChild(_FillInTheBlanksAnswerViewControl_Text2_i());
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Text1_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	txtTo = temp;
	temp.selectable = false;
	temp.id = "txtTo";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_TextInput1_i() : mx.controls.TextInput
{
	var temp : mx.controls.TextInput = new mx.controls.TextInput();
	textInput = temp;
	temp.setStyle("fontWeight", "normal");
	temp.id = "textInput";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Text2_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	txtAfter = temp;
	temp.selectable = false;
	temp.id = "txtAfter";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_State2_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_FillInTheBlanksAnswerViewControl_State2 = temp;
	temp.overrides = [_FillInTheBlanksAnswerViewControl_AddChild2_i()];
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_State2", _FillInTheBlanksAnswerViewControl_State2);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_AddChild2_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_FillInTheBlanksAnswerViewControl_AddChild2 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_FillInTheBlanksAnswerViewControl_HBox2_c);
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_AddChild2", _FillInTheBlanksAnswerViewControl_AddChild2);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_HBox2_c() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	temp.percentWidth = 100.0;
	temp.setStyle("verticalAlign", "middle");
	if (!temp.document) temp.document = this;
	temp.addChild(_FillInTheBlanksAnswerViewControl_Image1_i());
	temp.addChild(_FillInTheBlanksAnswerViewControl_Label1_i());
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Image1_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgIncorrect = temp;
	temp.id = "imgIncorrect";
	mx.binding.BindingManager.executeBindings(this, "imgIncorrect", imgIncorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Label1_i() : mx.controls.Label
{
	var temp : mx.controls.Label = new mx.controls.Label();
	lbIncorrect = temp;
	temp.selectable = false;
	temp.setStyle("color", 15027785);
	temp.id = "lbIncorrect";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_State3_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_FillInTheBlanksAnswerViewControl_State3 = temp;
	temp.overrides = [_FillInTheBlanksAnswerViewControl_AddChild3_i()];
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_State3", _FillInTheBlanksAnswerViewControl_State3);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_AddChild3_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_FillInTheBlanksAnswerViewControl_AddChild3 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_FillInTheBlanksAnswerViewControl_HBox3_c);
	mx.binding.BindingManager.executeBindings(this, "_FillInTheBlanksAnswerViewControl_AddChild3", _FillInTheBlanksAnswerViewControl_AddChild3);
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_HBox3_c() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	temp.percentWidth = 100.0;
	temp.setStyle("verticalAlign", "middle");
	if (!temp.document) temp.document = this;
	temp.addChild(_FillInTheBlanksAnswerViewControl_Image2_i());
	temp.addChild(_FillInTheBlanksAnswerViewControl_Label2_i());
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Image2_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgCorrect = temp;
	temp.id = "imgCorrect";
	mx.binding.BindingManager.executeBindings(this, "imgCorrect", imgCorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _FillInTheBlanksAnswerViewControl_Label2_i() : mx.controls.Label
{
	var temp : mx.controls.Label = new mx.controls.Label();
	lbCorrect = temp;
	temp.selectable = false;
	temp.setStyle("color", 15027785);
	temp.id = "lbCorrect";
	if (!temp.document) temp.document = this;
	return temp;
}


	//	binding mgmt
    private function _FillInTheBlanksAnswerViewControl_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                this.currentState = _sourceFunctionReturnValue;
            },
            "this.currentState");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FillInTheBlanksAnswerViewControl_State1.name = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_State1.name");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _FillInTheBlanksAnswerViewControl_AddChild1.relativeTo = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_AddChild1.relativeTo");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_incorrect);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FillInTheBlanksAnswerViewControl_State2.name = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_State2.name");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _FillInTheBlanksAnswerViewControl_AddChild2.relativeTo = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_AddChild2.relativeTo");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconIncorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgIncorrect.source = _sourceFunctionReturnValue;
            },
            "imgIncorrect.source");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_correct);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FillInTheBlanksAnswerViewControl_State3.name = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_State3.name");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _FillInTheBlanksAnswerViewControl_AddChild3.relativeTo = _sourceFunctionReturnValue;
            },
            "_FillInTheBlanksAnswerViewControl_AddChild3.relativeTo");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconCorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgCorrect.source = _sourceFunctionReturnValue;
            },
            "imgCorrect.source");
        result[8] = binding;

        return result;
    }

    private function _FillInTheBlanksAnswerViewControl_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (state_edit);
		[Binding(id='1')]
		destination = (state_edit);
		[Binding(id='2')]
		destination = (this);
		[Binding(id='3')]
		destination = (state_incorrect);
		[Binding(id='4')]
		destination = (this);
		[Binding(id='5')]
		destination = (EmbededData.inctance.iconIncorrect);
		[Binding(id='6')]
		destination = (state_correct);
		[Binding(id='7')]
		destination = (this);
		[Binding(id='8')]
		destination = (EmbededData.inctance.iconCorrect);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (FillInTheBlanksAnswerViewControl)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
