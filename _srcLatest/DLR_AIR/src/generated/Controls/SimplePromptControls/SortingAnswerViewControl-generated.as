
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls.SimplePromptControls
 *	Class: 		SortingAnswerViewControl
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\SimplePromptControls\SortingAnswerViewControl.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:03 EEST
 */

package Controls.SimplePromptControls
{

import Controls.DropAnswerControl;
import Interfaces.IDirectionAnswer;
import Interfaces.IFontStyle;
import Interfaces.IResult;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.HBox;
import mx.controls.Image;
import mx.controls.Text;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponent;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.states.AddChild;
import mx.states.State;
import mx.styles.*;



//	begin class def

public class SortingAnswerViewControl
	extends mx.containers.Canvas
	implements Interfaces.IDirectionAnswer, Interfaces.IFontStyle, Interfaces.IResult, mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _SortingAnswerViewControl_AddChild1 : mx.states.AddChild;

/**
 * @private
 **/
	public var _SortingAnswerViewControl_AddChild2 : mx.states.AddChild;

/**
 * @private
 **/
	public var _SortingAnswerViewControl_AddChild3 : mx.states.AddChild;

/**
 * @private
 **/
	public var _SortingAnswerViewControl_State1 : mx.states.State;

/**
 * @private
 **/
	public var _SortingAnswerViewControl_State2 : mx.states.State;

/**
 * @private
 **/
	public var _SortingAnswerViewControl_State3 : mx.states.State;

	[Bindable]
/**
 * @private
 **/
	public var dropAnswer : Controls.DropAnswerControl;

	[Bindable]
/**
 * @private
 **/
	public var imgCorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var imgIncorrect : mx.controls.Image;

	[Bindable]
/**
 * @private
 **/
	public var textCorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var textIncorrect : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var textTo : mx.controls.Text;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function SortingAnswerViewControl()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.verticalScrollPolicy = "off";
		this.horizontalScrollPolicy = "off";
		this.states = [_SortingAnswerViewControl_State1_i(), _SortingAnswerViewControl_State2_i(), _SortingAnswerViewControl_State3_i()];

		//	events

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _SortingAnswerViewControl_bindingsSetup();
		var watchers:Array = [];

		var target:SortingAnswerViewControl = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_Controls_SimplePromptControls_SortingAnswerViewControlWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 7 - 184

      import mx.events.ResizeEvent;
      import Model.EmbededData;
      import Model.StateTypes;
      import Model.Events.StateEvent;
      import Model.Answers.Answer;
      import Model.Answers.MatchingAnswer;
      import Model.Answers.SortingAnswer;
      /***************************************************************
      *
      *  Module Name:
      *     Controls\SimplePromptControls\SortingAnswerViewControl.mxml
      *
      *  Abstract:
      *     This is visual control for sorting answer prompt
      *     
      *  Author:
      *     Evgenij Welikij   09-November-2009
      *
      *  Revision History:
      *
      ***************************************************************/
          
          
      /**
      * Static
      */
      
      
      /**
      * Private members/properties
      */
      private var _answer:SortingAnswer;
      private var _isContinue:Boolean = false;
      
      private const state_edit:String = "state_edit";
      private const state_correct:String = "state_correct";
      private const state_incorrect:String = "state_incorrect";
      
      
      /**
      * Private methods
      */
      
      
      /**
      * Events handler
      */
      
      
      /** 
      * Initialization
      */
          
          
      /**
      * Constructor 
      */
      
      
      /**
      * Virtuals methods
      */  
      public virtual function FontName(name:String):void
      {
        textTo.setStyle("fontFamily", name);
        textIncorrect.setStyle("fontFamily", name);
        textCorrect.setStyle("fontFamily", name);
        
        dropAnswer.FontName(name);
      }
      
      public virtual function FontSize(size:int):void
      {
        textTo.setStyle("fontSize", size);
        textIncorrect.setStyle("fontSize", size);
        textCorrect.setStyle("fontSize", size);
        
        imgCorrect.width = size;
        imgCorrect.height = size;
        imgIncorrect.width = size;
        imgIncorrect.height = size;
        
        dropAnswer.FontSize(size);
      }
      
      public virtual function FontColor(color:int):void
      {
        textTo.setStyle("color", color);
        textIncorrect.setStyle("color", color);
        textCorrect.setStyle("color", color);
        
        dropAnswer.FontColor(color);
      }
      
      public virtual function CheckAnswer():void
      {
        if (_answer.text == dropAnswer.GetText())
          SetCorrect();
        else
        {
          SetIncorrect();
          dispatchEvent(new StateEvent(StateEvent.NEW_STATE, StateTypes.SHOW_ANSWER));
        }
      }
      
      public virtual function Bold():void
      {
      }
      
      public virtual function ShowAnswer():void
      {
        SetCorrect();
        textCorrect.htmlText = _answer.answer.toString() + ". " + _answer.text;
      }
      
      public virtual function Continue():void
      {
        _isContinue = true;
      }
      
      public virtual function IsComplete():Boolean
      {
        return dropAnswer.isDrop;
      }
      
      public virtual function Init(answer:Answer):void
      {
        this._answer = answer as SortingAnswer;
        textTo.htmlText = (answer as SortingAnswer).answer.toString() + ".";
     
      }
      
      public virtual function GetText():String
      {
        return dropAnswer.GetText();
      }
      
      public virtual function SetIncorrect():void 
      {
        if (!_isContinue)
        {
          currentState = state_incorrect;
          textIncorrect.htmlText = textTo.text + " " + dropAnswer.GetText();
        }
      }
      
      public virtual function SetCorrect():void 
      {
        if (!_isContinue)
        {
          currentState = state_correct;
          textCorrect.htmlText = textTo.text + " " + _answer.text;
        }
      }
      
      public virtual function DefaultFont():void
      {
        dropAnswer.DefaultFont();
        
        textTo.setStyle("fontFamily", "Futura");
        textCorrect.setStyle("fontFamily", "Futura");
        textIncorrect.setStyle("fontFamily", "Futura");
      }
 
      
      /**
      * Public members/properties
      */
      
      
      /**
      * Public methods
      */
      
      
      
    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _SortingAnswerViewControl_State1_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_SortingAnswerViewControl_State1 = temp;
	temp.overrides = [_SortingAnswerViewControl_AddChild1_i()];
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_State1", _SortingAnswerViewControl_State1);
	return temp;
}

private function _SortingAnswerViewControl_AddChild1_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_SortingAnswerViewControl_AddChild1 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_SortingAnswerViewControl_HBox1_c);
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_AddChild1", _SortingAnswerViewControl_AddChild1);
	return temp;
}

private function _SortingAnswerViewControl_HBox1_c() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	temp.verticalScrollPolicy = "off";
	temp.horizontalScrollPolicy = "off";
	temp.setStyle("verticalAlign", "middle");
	if (!temp.document) temp.document = this;
	temp.addChild(_SortingAnswerViewControl_Text1_i());
	temp.addChild(_SortingAnswerViewControl_DropAnswerControl1_i());
	return temp;
}

private function _SortingAnswerViewControl_Text1_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	textTo = temp;
	temp.id = "textTo";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _SortingAnswerViewControl_DropAnswerControl1_i() : Controls.DropAnswerControl
{
	var temp : Controls.DropAnswerControl = new Controls.DropAnswerControl();
	dropAnswer = temp;
	temp.id = "dropAnswer";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _SortingAnswerViewControl_State2_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_SortingAnswerViewControl_State2 = temp;
	temp.overrides = [_SortingAnswerViewControl_AddChild2_i()];
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_State2", _SortingAnswerViewControl_State2);
	return temp;
}

private function _SortingAnswerViewControl_AddChild2_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_SortingAnswerViewControl_AddChild2 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_SortingAnswerViewControl_HBox2_c);
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_AddChild2", _SortingAnswerViewControl_AddChild2);
	return temp;
}

private function _SortingAnswerViewControl_HBox2_c() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.verticalScrollPolicy = "off";
	temp.horizontalScrollPolicy = "off";
	temp.setStyle("verticalAlign", "middle");
	if (!temp.document) temp.document = this;
	temp.addChild(_SortingAnswerViewControl_Image1_i());
	temp.addChild(_SortingAnswerViewControl_Text2_i());
	return temp;
}

private function _SortingAnswerViewControl_Image1_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgCorrect = temp;
	temp.id = "imgCorrect";
	mx.binding.BindingManager.executeBindings(this, "imgCorrect", imgCorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _SortingAnswerViewControl_Text2_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	textCorrect = temp;
	temp.selectable = false;
	temp.id = "textCorrect";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _SortingAnswerViewControl_State3_i() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	_SortingAnswerViewControl_State3 = temp;
	temp.overrides = [_SortingAnswerViewControl_AddChild3_i()];
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_State3", _SortingAnswerViewControl_State3);
	return temp;
}

private function _SortingAnswerViewControl_AddChild3_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	_SortingAnswerViewControl_AddChild3 = temp;
	temp.creationPolicy = "all";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_SortingAnswerViewControl_HBox3_c);
	mx.binding.BindingManager.executeBindings(this, "_SortingAnswerViewControl_AddChild3", _SortingAnswerViewControl_AddChild3);
	return temp;
}

private function _SortingAnswerViewControl_HBox3_c() : mx.containers.HBox
{
	var temp : mx.containers.HBox = new mx.containers.HBox();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.verticalScrollPolicy = "off";
	temp.horizontalScrollPolicy = "off";
	temp.setStyle("verticalAlign", "middle");
	if (!temp.document) temp.document = this;
	temp.addChild(_SortingAnswerViewControl_Image2_i());
	temp.addChild(_SortingAnswerViewControl_Text3_i());
	return temp;
}

private function _SortingAnswerViewControl_Image2_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	imgIncorrect = temp;
	temp.id = "imgIncorrect";
	mx.binding.BindingManager.executeBindings(this, "imgIncorrect", imgIncorrect);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _SortingAnswerViewControl_Text3_i() : mx.controls.Text
{
	var temp : mx.controls.Text = new mx.controls.Text();
	textIncorrect = temp;
	temp.selectable = false;
	temp.id = "textIncorrect";
	if (!temp.document) temp.document = this;
	return temp;
}


	//	binding mgmt
    private function _SortingAnswerViewControl_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                this.currentState = _sourceFunctionReturnValue;
            },
            "this.currentState");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_edit);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _SortingAnswerViewControl_State1.name = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_State1.name");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _SortingAnswerViewControl_AddChild1.relativeTo = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_AddChild1.relativeTo");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_correct);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _SortingAnswerViewControl_State2.name = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_State2.name");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _SortingAnswerViewControl_AddChild2.relativeTo = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_AddChild2.relativeTo");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconCorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgCorrect.source = _sourceFunctionReturnValue;
            },
            "imgCorrect.source");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (state_incorrect);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _SortingAnswerViewControl_State3.name = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_State3.name");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():mx.core.UIComponent
            {
                return (this);
            },
            function(_sourceFunctionReturnValue:mx.core.UIComponent):void
            {
				
                _SortingAnswerViewControl_AddChild3.relativeTo = _sourceFunctionReturnValue;
            },
            "_SortingAnswerViewControl_AddChild3.relativeTo");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (EmbededData.inctance.iconIncorrect);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                imgIncorrect.source = _sourceFunctionReturnValue;
            },
            "imgIncorrect.source");
        result[8] = binding;

        return result;
    }

    private function _SortingAnswerViewControl_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (state_edit);
		[Binding(id='1')]
		destination = (state_edit);
		[Binding(id='2')]
		destination = (this);
		[Binding(id='3')]
		destination = (state_correct);
		[Binding(id='4')]
		destination = (this);
		[Binding(id='5')]
		destination = (EmbededData.inctance.iconCorrect);
		[Binding(id='6')]
		destination = (state_incorrect);
		[Binding(id='7')]
		destination = (this);
		[Binding(id='8')]
		destination = (EmbededData.inctance.iconIncorrect);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (SortingAnswerViewControl)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
