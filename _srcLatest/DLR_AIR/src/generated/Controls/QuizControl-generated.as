
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	Controls
 *	Class: 		QuizControl
 *	Source: 	P:\Active\EvanMoorEducationalPublishers\_svnPublic\DLR\_srcLatest\DLR_AIR\src\Controls\QuizControl.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.07.27 18:32:06 EEST
 */

package Controls
{

import Controls.ActivityControl;
import Controls.NavigationBar;
import Model.Events.ActivityControlEvent;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.filters.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.containers.Canvas;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;



//	begin class def

public class QuizControl
	extends mx.containers.Canvas
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var activityControl : Controls.ActivityControl;

	[Bindable]
/**
 * @private
 **/
	public var hideCanvas : mx.containers.Canvas;

	[Bindable]
/**
 * @private
 **/
	public var navBar : Controls.NavigationBar;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
  ,
  propertiesFactory: function():Object { return {
    height: 590,
    width: 810,
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: Controls.NavigationBar
        ,
        id: "navBar"
        ,
        propertiesFactory: function():Object { return {
          x: -1,
          y: 0,
          width: 810
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: Controls.ActivityControl
        ,
        id: "activityControl"
        ,
        events: {
          action: "__activityControl_action"
        }
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 42,
          width: 799,
          height: 511,
          horizontalScrollPolicy: "off"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Canvas
        ,
        id: "hideCanvas"
        ,
        stylesFactory: function():void {
          this.backgroundColor = 16579579;
          this.backgroundAlpha = 0.6;
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          visible: false
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function QuizControl()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.backgroundColor = 16777215;
		};



		//	properties
		this.height = 590;
		this.width = 810;
		this.verticalScrollPolicy = "off";

		//	events
		this.addEventListener("creationComplete", ___QuizControl_Canvas1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);



		super.initialize();
	}

	//	scripts
	//	<Script>, line 7 - 145

      import Controls.Windows.AboutWindow;
      import Model.Events.ActivityControlEvent;
      import Model.Events.NavigationBarEvent;
      import mx.events.FlexEvent;
      import Model.Preferences;
      import Model.Activity;
      import Model.Emc;


      /***************************************************************
      *
      *  Module Name:
      *     Controls\QuizControl.mxml
      *
      *  Abstract:
      *     This is quiz control
      *
      *  Author:
      *     Evgenij Welikij   19-October-2009
      *
      *  Revision History:
      *
      ***************************************************************/


      /**
      * Static
      */
      public static var instance:QuizControl;

      /**
      * Private members/properties
      */
      private var _activity:Activity;
      private var _preferences:Preferences;


      /**
      * Private methods
      */
      private function ChangeActivityStyle(preferences:Preferences):void
      {
        if (activityControl != null)
        {
          activityControl.FontName(preferences.fontName);
          activityControl.FontSize(preferences.fontSize + Preferences.FontSizeShift);
          activityControl.FontColor(preferences.fontColor);
          activityControl.isCheckAnswer = preferences.isCheckAnswer;
        }
      }


      /**
      * Events handler
      */
      private function CreationComplete(event:FlexEvent):void
      {
        navBar.addEventListener(NavigationBarEvent.CHANGE_FONT_NAME, ChangeFontName_navBar);
        navBar.addEventListener(NavigationBarEvent.CHANGE_FONT_SIZE, ChangeFontSize_navBar);
        navBar.addEventListener(NavigationBarEvent.CHANGE_ACTIVITY, ChangeActivity_navBar);
      }

      private function ChangeFontName_navBar(event:NavigationBarEvent):void
      {
        if (event.preferences.fontName == "Default")
          activityControl.isDefault = true;
        else
          activityControl.isDefault = false;
          
        activityControl.FontName(event.preferences.fontName);
      }

      private function ChangeFontSize_navBar(event:NavigationBarEvent):void
      {
        activityControl.FontSize(event.preferences.fontSize + Preferences.FontSizeShift);
      }

      private function ChangeActivity_navBar(event:NavigationBarEvent):void
      {
        activityControl.Init(event.activity);
      }

      private function Action_activityControlHandler(event:ActivityControlEvent):void
      {
        navBar.activity = event.activity;
      }


      /**
      * Initialization
      */
      public function Init(activity:Activity, preferences:Preferences):void
      {
        this._activity = activity;
        this._preferences = preferences;
        instance = this;
        
        navBar.Init(activity, preferences);
        activityControl.isCheckAnswer = preferences.isCheckAnswer;
        activityControl.Init(activity);

        ChangeActivityStyle(preferences);
      }


      /**
      * Constructor
      */


      /**
      * Virtuals methods
      */


      /**
      * Public members/properties
      */
       public function get preferences():Preferences
       {
         return this._preferences;
       }

      /**
      * Public methods
      */
      public function ChangePreferences(preferences:Preferences):void
      {
        this._preferences = preferences;

        ChangeActivityStyle(preferences);

        if (navBar != null)
          navBar.preferences = preferences;
      }


    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___QuizControl_Canvas1_creationComplete(event:mx.events.FlexEvent):void
{
	CreationComplete(event)
}

/**
 * @private
 **/
public function __activityControl_action(event:Model.Events.ActivityControlEvent):void
{
	Action_activityControlHandler(event)
}





	//	embed carrier vars
	//	end embed carrier vars


//	end class def
}

//	end package def
}
